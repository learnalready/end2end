# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  if ENV['vm'] == '.net'
    dotnet = true
    puts "Building .NET VM"
  else
    dotnet = false
  end

  if dotnet == false  # will pull this out later don't need .net and others at same time.
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    config.vm.box = "ubuntu/xenial64"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    # config.vm.box_check_update = false

    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine. In the example below,
    # accessing "localhost:8080" will access port 80 on the guest machine.
    config.vm.network "private_network", ip: "10.100.198.200"
    #config.vm.network :forwarded_port, guest: 80, host: 4567
    # nginx
    config.vm.network :forwarded_port, guest: 5000, host: 5000

    # Jenkins
    config.vm.network :forwarded_port, guest: 50000, host: 50000
    config.vm.network :forwarded_port, guest: 8080, host: 8080

    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    # config.vm.synced_folder "../data", "/vagrant_data"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    # config.vm.provision "shell", inline: <<-SHELL
    config.vm.provision :shell, path: "bootstrap.sh"
    #config.vm.provision :shell, inline: "PYTHONUNBUFFERED=1 ansible-playbook /vagrant/ansible/cd.yml -c local"
    config.vm.provider "virtualbox" do |v|
      v.memory = 2048
    end
  else   # dotnet
    config.vm.box = "ubuntu/xenial64"
    config.vm.network "private_network", ip: "10.100.198.201"
    config.vm.synced_folder "../src", "/projects"

    config.vm.provider "virtualbox" do |v|
      v.name = "dotnet_fun"
      v.memory = 3072
    end

    # need to fix readonly prior to running script:  vagrant plugin install vagrant-host-shell
    config.vm.provision :host_shell do |host_shell|
      host_shell.inline = 'C:\Program Files\Oracle\VirtualBox\VBoxManage setextradata dotnet_fun VBoxInternal2/SharedFoldersEnableSymlinksCreate/SHARE_NAME 1'
    end
    config.vm.provision :shell, path: "bootstrap_dotnet.sh"
    
  end    # dotnet
  puts "All Done"
end
